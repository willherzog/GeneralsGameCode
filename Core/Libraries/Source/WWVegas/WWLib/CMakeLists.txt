set(WWLIB_SRC
    always.h
    argv.cpp
    argv.h
    b64pipe.cpp
    b64pipe.h
    b64straw.cpp
    b64straw.h
    base64.cpp
    base64.h
    #bfiofile.cpp
    #bfiofile.h
    binheap.h
    bittype.h
    bound.h
    BSEARCH.H
    buff.cpp
    BUFF.H
    bufffile.cpp
    bufffile.h
    CallbackHook.h
    chunkio.cpp
    chunkio.h
    cpudetect.cpp
    cpudetect.h
    #crandom.h
    crc.cpp
    CRC.H
    #crcpipe.cpp
    #crcpipe.h
    #crcstraw.cpp
    #crcstraw.h
    cstraw.cpp
    cstraw.h
    Except.cpp
    Except.h
    FastAllocator.cpp
    FastAllocator.h
    ffactory.cpp
    ffactory.h
    gcd_lcm.cpp
    gcd_lcm.h
    #global.h
    hash.cpp
    hash.h
    hashcalc.h
    HASHLIST.H
    #hashtab.h
    hashtemplate.h
    #incdec.h
    INDEX.H
    ini.cpp
    INI.H
    inisup.h
    iostruct.h
    jshell.cpp
    LISTNODE.H
    #lzo.cpp
    #lzo.h
    #lzo1x.h
    #lzo1x_c.cpp
    #lzo1x_d.cpp
    #lzoconf.h
    #lzopipe.cpp
    #lzopipe.h
    #lzostraw.cpp
    #lzostraw.h
    #lzo_conf.h
    #md5.cpp
    #md5.h
    mempool.h
    mmsys.h
    multilist.cpp
    multilist.h
    mutex.cpp
    mutex.h
    #noinit.h
    notifier.h
    nstrdup.cpp
    nstrdup.h
    ntree.h
    pipe.cpp
    PIPE.H
    Point.h
    ramfile.cpp
    RAMFILE.H
    random.cpp
    RANDOM.H
    rawfile.cpp
    RAWFILE.H
    readline.cpp
    readline.h
    realcrc.cpp
    realcrc.h
    ref_ptr.h
    refcount.cpp
    refcount.h
    #regexpr.cpp
    #regexpr.h
    #search.h
    sharebuf.h
    Signaler.h
    simplevec.h
    SLIST.H
    slnode.cpp
    SLNODE.H
    stimer.cpp
    stimer.h
    straw.cpp
    STRAW.H
    strtok_r.cpp
    strtok_r.h
    #swap.h
    systimer.cpp
    systimer.h
    TARGA.CPP
    TARGA.H
    textfile.cpp
    textfile.h
    tgatodxt.cpp
    tgatodxt.h
    thread.cpp
    thread.h
    trect.h
    trim.cpp
    trim.h
    uarray.h
    vector.cpp
    Vector.H
    visualc.h
    widestring.cpp
    widestring.h
    win.h
    WWCommon.h
    wwfile.cpp
    WWFILE.H
    wwstring.cpp
    wwstring.h
    xpipe.cpp
    XPIPE.H
    xstraw.cpp
    XSTRAW.H
)

if(WIN32)
    list(APPEND WWLIB_SRC
        mpu.cpp
        MPU.H
        rcfile.cpp
        rcfile.h
        registry.cpp
        registry.h
        verchk.cpp
        verchk.h
        WWCOMUtil.cpp
        WWCOMUtil.h
    )
endif()

add_library(core_wwlib STATIC)
set_target_properties(core_wwlib PROPERTIES OUTPUT_NAME wwlib)

target_sources(core_wwlib PRIVATE ${WWLIB_SRC})

target_include_directories(core_wwlib PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}
)

target_link_libraries(core_wwlib PRIVATE
    core_wwcommon
    corei_always
)
